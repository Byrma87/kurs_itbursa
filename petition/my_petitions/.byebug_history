c
expired_days(petition) && petition.votes.size >= MIN_VOITES
expired_days(petition) && 
expired_days(petition)
petition.expired_days(petition)
petition.expired_day(petition)
expired_day(petition)
c
EXPIRED_DAYS
c
EXPIRED_DAYS
c
MIN_VOITES
MIN_VOTIES
EXPIRED_DAYS
(Date.today - petition.created_at.to_date > EXPIRED_DAYS)
petition
c
cc
c
KONST
c
cc
c
cc
c
cc
c
(Date.today - petition.created_at.to_date > 5/1 && petition.votes.size > 1)
Date.today - petition.created_at.to_date > 5/1 && petition.votes.size > 1
Date.today - e.created_at.to_date > 5/1 && e.votes.size > 1
(Date.today - petition.created_at.to_date > 5/1) && (pet
Date.today - petition.created_at.to_date > 5/1 && petition.votes.size
c
Date.today - petition.created_at.to_date > 5/1 && petition.votes.size
c
l.my_metod_pet(l)
l = Petition.first
l.my_metod_pet(l)
l = Petition.last
c
l.my_metod_pet
l = Petition.last
c
8 > 5   
8 > 5 ?  
8 > 5?  
if 8 > 5?  
if 8 > 5 end 
if 8 > 5? 
if 8 > 5 
c
l.my_metod_pet
l = Petition.last
c
l.my_metod_pet
l = Petition.last
l.my_metod_pet
c
l.my_metod_pet
l = Petition.last
Petition.last
Petition
c
cc
c
cc
c
e.votes.size
e.vote.size
e
c
cc
c
cc
c
cc
c
cc
c
cc
c
cc
c
cc
c
cc
c
cc
c
cc
c
cc
c
cc
c
8/1 > 5/1
d - p
d > p
d = Date.today
Date.today
p
p = e.created_at.to_date
c
ec
Date.today
Data.today
c
petition.votes.size
@user
user
c
petition.votes.size
votes.petition
petition.votes
petition.vote
petition.user
@user
c
Petition.all
Petition
c
session[:user_id] = nil
c
p.votes.where(user_id: 9).size
p.votes.where(user_id: 9)
p.votes.where(user_id: 9).size
p.votes.where(user_id: 9]).size
p.votes.where(user_id: params[:user_id]).size
p.votes.where(user_id: params[:user_id])
p.votes.where(user_id: 3)
p.votes.
p.votes.user_id[3]
p.votes.user_id
p.votes[:user_id 3]
p.votes(:user_id 3)
p.votes
p
p = Petition.find_by(id: params[:petition_id])
@petition
Vote.last
c
params
c
Vote.last
Vote.all
c
current_user[:id]
current_user[user_id:]
current_user[:user_id]
current_user[;user_id]
current_user[user_id:]
current_user
c
@petition
c
o.save
o = p.votes.create(user_id: current_user.id)
p.votes.create(user_id: current_user.id)
p.votes
p.votes.create
p.votes
p = Petition.find_by(id: params[:pet])
p = Petition.find_by(id: 6)
p = Petition.find_by(:id 6)
params
c
params[:pet]
current_user.id
p.votes
hh.petitions
hh = Vote.first
Vote.first
v = Vote.first
p
p = Petition.where(id: params[:pet])
p
p.votes
p.votes.create(user_id: current_user.id)
c
p.votes.create
p.votes.create(user_id: current_user.id)
current_user.id
p.votes.create(user_id: DDDDDD
p = Petition.where(id: params[:pet])
Petition.where(id: params[:pet])
Petition.where(id: 9)
Petition.where(:id 9)
Petition.where(:id 9
Petition.last
Petition.find(id: params[:pet])
params[:pet]
params[pet:]
params
params.pet
Petition.find(id: params.pet)
Petition.all
params
pet
c
session[@petition]
session[@petition]\
session[:petition]\
session.petition
session[:user_id]
session[user_id:]
session.user_id
session
sesion
params.require(:petition).permit(:title, :text)
params.require(:vote).permit(:user_id)
params.require(:petition).permit(:user_id)
params[:user_id]
params[:petition]
@petition
@petitions
petitions
petition
current_user
params
@petition
c
f.votes.size
f.votes(count)
f.votes.count
f.votes
f.votes.create(user_id: f.user_id)
f.votes.create(user_id: user_id)
f.votes.create(user_id: 3)
f.votes.create(user_id: f)
f.votes.create
f.votes
f = @petition
continue
f.votes.create
Vote.all
f.votes
f = @petition
@petition.votes
@petition
c
@petitions.current_user[:user_id]
@petitions.curent_user[:user_id]
@petitions
SELECT * FROM "petitions"
@petitions
c
h = Petition.all.order(created_at: :desc).limit(10)
c
n
nn
n
nn
n
c
@user_params[:password]
